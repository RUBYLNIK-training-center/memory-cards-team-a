<div class="bg-light p-5 rounded mt-3">
  <p class="fs-3 fw-bolder" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
    <%= @card.question %>
  </p>

  <div class="collapse" id="collapseExample">
    <div class="card text-dark bg-light">
      <div class="card-body">
        <%= markdown(@card.answer) %>
      </div>
      <div>
        <div class="d-flex justify-content-center mb-2"><%= t('learn.learn.question') %></div>
        <div class="d-flex justify-content-center">
          <button onclick="myFunction(1)" type="button" class="btn btn-danger">1</button>
          <button onclick="myFunction(2)" type="button" class="btn btn-warning ms-2">2</button>
          <button onclick="myFunction(3)" type="button" class="btn btn-secondary ms-2">3</button>
          <button onclick="myFunction(4)" type="button" class="btn btn-primary ms-2">4</button>
          <button onclick="myFunction(5)" type="button" class="btn btn-success ms-2">5</button>
        </div>
        <div class="d-flex justify-content-center mb-1"><%= t('learn.learn.level') %><% if I18n.locale == :en %>
                <%= @card.confidence_level %>
              <% else %>
                <% hash = { "undefined" => "не определено", "very_bad" => "очень плохо", "bad" => "плохо", "medium" => "средне", "good" => "хорошо", "perfect" => "идеально" } %>
                <%= hash[@card.confidence_level]%>
              <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<%= link_to t('.back'), board_cards_path(@board), class: "btn btn-outline-secondary mt-3" %>

<script>
  function myFunction(num) {
    let level = document.getElementsByClassName('d-flex justify-content-center mb-1')[0];
    let confidence_level = ['undefined', 'very_bad', 'bad', 'medium', 'good', 'perfect'];
    let path = window.location.pathname;
    let url = (path.slice(path.indexOf('cards')));
    let http = new XMLHttpRequest();
    let params = 'confidence_level=' + confidence_level[num];
    http.open('PATCH', `/${url}`, true);

    //Send the proper header information along with the request
    http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

    //Call a function when the state changes.
    http.onreadystatechange = function() {
      if(http.readyState == 4 && http.status == 200) {
        level.innerText = "<%= t('learn.learn.level') %>" + http.responseText;
        <% if I18n.locale == :en %>
          level.innerText = "<%= t('learn.learn.level') %>" + http.responseText;
        <% else %>
          const lang = { "undefined": "не определено", "very_bad": "очень плохо", "bad": "плохо", "medium": "средне", "good": "хорошо", "perfect": "идеально" };
          level.innerText = "<%= t('learn.learn.level') %>" + lang[http.responseText];
        <% end %>
      }
    }
    http.send(params);
  }
</script>
