<h1>Learning page</h1>

<div id="carouselExampleControls" class="carousel slide" data-bs-keyboard="true" data-bs-interval="false" data-bs-touch="true">
  <div class="carousel-inner">
    <% @cards.each do |card| %>
      <div class="carousel-item bg-light p-5 rounded mt-3">
        <p class="fs-3 fw-bolder" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
          <%= card.question %>
        </p>

        <div class="collapse" id="collapseExample">
          <div class="card text-dark bg-light">
            <div class="card-body" value='<%= card.id %>'>
              <%= markdown(card.answer) %>
            </div>
            <div>
              <div class="d-flex justify-content-center mb-2">How well did I know it?</div>
              <div class="d-flex justify-content-center">
                <button onclick="myFunction(1)" type="button" class="btn btn-danger">1</button>
                <button onclick="myFunction(2)" type="button" class="btn btn-warning ms-2">2</button>
                <button onclick="myFunction(3)" type="button" class="btn btn-secondary ms-2">3</button>
                <button onclick="myFunction(4)" type="button" class="btn btn-primary ms-2">4</button>
                <button onclick="myFunction(5)" type="button" class="btn btn-success ms-2">5</button>
              </div>
              <div class="d-flex justify-content-center mb-1">Current level of confidence: <%= card.confidence_level %></div>
            </div>
          </div>
        </div>
      </div>
    <% end %>
  </div>
  <button onclick="functionForCountDown()" class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev"></button>
  <button onclick="functionForCountUp()" class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next"></button>
</div>

<script>
  let amount = document.getElementsByClassName('card-body').length;
  let count = 0;

    function functionForClose() {
      document.querySelectorAll('div.collapse').forEach(el => {
        el.className = 'collapse';
      });
    }

  function functionForCountUp() {
    count += 1;
    if (count == amount) {
      count -= amount
    }
    functionForClose();
  }

  function functionForCountDown() {
    count -= 1;
    if (count == -amount) {
      count += amount;
    }
    functionForClose();
  }

  window.addEventListener('load', function(event) {
    if (document.querySelector("div.container div.carousel div.carousel-inner div.carousel-item") != null) {
      const el = document.querySelector("div.container div.carousel div.carousel-inner div.carousel-item");
      el.classList.add("active");
    }
  });

  function myFunction(num) {
    let card;
    let level;
    if (count >= 0) {
      card = document.getElementsByClassName('card-body')[count].getAttribute("value");
      level = document.getElementsByClassName('d-flex justify-content-center mb-1')[count];
    } else if (count < 0) {
      card = document.getElementsByClassName('card-body')[amount + count].getAttribute("value");
      level = document.getElementsByClassName('d-flex justify-content-center mb-1')[amount + count];
    }
    let confidence_level = ['undefined', 'very_bad', 'bad', 'medium', 'good', 'perfect'];
    let http = new XMLHttpRequest();
    let params = 'confidence_level=' + confidence_level[num];
    http.open('PATCH', `/cards/${card}`, true);

    //Send the proper header information along with the request
    http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

    //Call a function when the state changes.
    http.onreadystatechange = function() {
      if(http.readyState == 4 && http.status == 200) {
        level.innerText = 'Current level of confidence: ' + http.responseText;
      }
    }
    http.send(params);
  }
</script>

<%= link_to 'Back', boards_path, class: "btn btn-outline-secondary mt-3" %>
